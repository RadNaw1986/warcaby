{"ast":null,"code":"'use strict';\n\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\nconst PLUGIN_NAME = 'caching_sha2_password';\nconst crypto = require('crypto');\nconst {\n  xor,\n  xorRotating\n} = require('../auth_41');\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\nconst STATE_INITIAL = 0;\nconst STATE_TOKEN_SENT = 1;\nconst STATE_WAIT_SERVER_KEY = 2;\nconst STATE_FINAL = -1;\nfunction sha256(msg) {\n  const hash = crypto.createHash('sha256');\n  hash.update(msg);\n  return hash.digest();\n}\nfunction calculateToken(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  const stage1 = sha256(Buffer.from(password));\n  const stage2 = sha256(stage1);\n  const stage3 = sha256(Buffer.concat([stage2, scramble]));\n  return xor(stage1, stage3);\n}\nfunction encrypt(password, scramble, key) {\n  const stage1 = xorRotating(Buffer.from(`${password}\\0`, 'utf8'), scramble);\n  return crypto.publicEncrypt(key, stage1);\n}\nmodule.exports = function () {\n  let pluginOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _ref => {\n    let {\n      connection\n    } = _ref;\n    let state = 0;\n    let scramble = null;\n    const password = connection.config.password;\n    const authWithKey = serverKey => {\n      const _password = encrypt(password, scramble, serverKey);\n      state = STATE_FINAL;\n      return _password;\n    };\n    return data => {\n      switch (state) {\n        case STATE_INITIAL:\n          scramble = data.slice(0, 20);\n          state = STATE_TOKEN_SENT;\n          return calculateToken(password, scramble);\n        case STATE_TOKEN_SENT:\n          if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\n            state = STATE_FINAL;\n            return null;\n          }\n          if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\n            const isSecureConnection = typeof pluginOptions.overrideIsSecure === 'undefined' ? connection.config.ssl || connection.config.socketPath : pluginOptions.overrideIsSecure;\n            if (isSecureConnection) {\n              state = STATE_FINAL;\n              return Buffer.from(`${password}\\0`, 'utf8');\n            }\n\n            // if client provides key we can save one extra roundrip on first connection\n            if (pluginOptions.serverPublicKey) {\n              return authWithKey(pluginOptions.serverPublicKey);\n            }\n            state = STATE_WAIT_SERVER_KEY;\n            return REQUEST_SERVER_KEY_PACKET;\n          }\n          throw new Error(`Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`);\n        case STATE_WAIT_SERVER_KEY:\n          if (pluginOptions.onServerPublicKey) {\n            pluginOptions.onServerPublicKey(data);\n          }\n          return authWithKey(data);\n        case STATE_FINAL:\n          throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`);\n      }\n      throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`);\n    };\n  };\n};","map":{"version":3,"names":["PLUGIN_NAME","crypto","require","xor","xorRotating","REQUEST_SERVER_KEY_PACKET","Buffer","from","FAST_AUTH_SUCCESS_PACKET","PERFORM_FULL_AUTHENTICATION_PACKET","STATE_INITIAL","STATE_TOKEN_SENT","STATE_WAIT_SERVER_KEY","STATE_FINAL","sha256","msg","hash","createHash","update","digest","calculateToken","password","scramble","alloc","stage1","stage2","stage3","concat","encrypt","key","publicEncrypt","module","exports","pluginOptions","arguments","length","undefined","_ref","connection","state","config","authWithKey","serverKey","_password","data","slice","equals","isSecureConnection","overrideIsSecure","ssl","socketPath","serverPublicKey","Error","onServerPublicKey"],"sources":["G:/PROGRAMY/Node.js/warcaby/frontend/node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js"],"sourcesContent":["'use strict';\n\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\n\nconst PLUGIN_NAME = 'caching_sha2_password';\nconst crypto = require('crypto');\nconst { xor, xorRotating } = require('../auth_41');\n\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\n\nconst STATE_INITIAL = 0;\nconst STATE_TOKEN_SENT = 1;\nconst STATE_WAIT_SERVER_KEY = 2;\nconst STATE_FINAL = -1;\n\nfunction sha256(msg) {\n  const hash = crypto.createHash('sha256');\n  hash.update(msg);\n  return hash.digest();\n}\n\nfunction calculateToken(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  const stage1 = sha256(Buffer.from(password));\n  const stage2 = sha256(stage1);\n  const stage3 = sha256(Buffer.concat([stage2, scramble]));\n  return xor(stage1, stage3);\n}\n\nfunction encrypt(password, scramble, key) {\n  const stage1 = xorRotating(\n    Buffer.from(`${password}\\0`, 'utf8'),\n    scramble\n  );\n  return crypto.publicEncrypt(key, stage1);\n}\n\nmodule.exports = (pluginOptions = {}) => ({ connection }) => {\n  let state = 0;\n  let scramble = null;\n\n  const password = connection.config.password;\n\n  const authWithKey = serverKey => {\n    const _password = encrypt(password, scramble, serverKey);\n    state = STATE_FINAL;\n    return _password;\n  };\n\n  return data => {\n    switch (state) {\n      case STATE_INITIAL:\n        scramble = data.slice(0, 20);\n        state = STATE_TOKEN_SENT;\n        return calculateToken(password, scramble);\n\n      case STATE_TOKEN_SENT:\n        if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\n          state = STATE_FINAL;\n          return null;\n        }\n\n        if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\n          const isSecureConnection =\n            typeof pluginOptions.overrideIsSecure === 'undefined'\n              ? connection.config.ssl || connection.config.socketPath\n              : pluginOptions.overrideIsSecure;\n          if (isSecureConnection) {\n            state = STATE_FINAL;\n            return Buffer.from(`${password}\\0`, 'utf8');\n          }\n\n          // if client provides key we can save one extra roundrip on first connection\n          if (pluginOptions.serverPublicKey) {\n            return authWithKey(pluginOptions.serverPublicKey);\n          }\n\n          state = STATE_WAIT_SERVER_KEY;\n          return REQUEST_SERVER_KEY_PACKET;\n        }\n        throw new Error(\n          `Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`\n        );\n      case STATE_WAIT_SERVER_KEY:\n        if (pluginOptions.onServerPublicKey) {\n          pluginOptions.onServerPublicKey(data);\n        }\n        return authWithKey(data);\n      case STATE_FINAL:\n        throw new Error(\n          `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\n        );\n    }\n\n    throw new Error(\n      `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\n    );\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}